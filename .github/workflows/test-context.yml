name: "workflow to test pages artifact"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: |
          date > ./content
      - uses: actions/upload-pages-artifact@v3
        with:
          path: "./"

  # Deploy job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        
  sign:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
    steps:
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.11'

      - run: |
          touch testfile
          pip install sigstore

          # tweak sigstore source to use our TUF URL 
          SITE_PACKAGES=$(pip show sigstore | sed -n "s/^Location: //p")
          sed -ie "s#STAGING_TUF_URL = .*#STAGING_TUF_URL = \"https://sigstore.github.io/root-signing-staging/\"#" "$SITE_PACKAGES/sigstore/_internal/tuf.py"

          # sign, then verify using the Actions oidc identity
          echo "signing"
          python -m sigstore --staging sign testfile
          echo "verify"
          python -m sigstore --staging verify github \
              --cert-identity https://github.com/jku/create-issue-tester/.github/workflows/test.yml
              testfile

  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: 'write'
    steps:
      - uses: actions/download-artifact@v4
        with: 
          name: "github-pages"
      - run: |
          mkdir publish
          tar --extract --file artifact.tar --directory publish 
          ls publish

      - uses: google-github-actions/auth@5a50e581162a13f4baa8916d01180d2acbc04363 # v2.1.0
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/843741030650/locations/global/workloadIdentityPools/testpool/providers/testprovider'
          service_account: 'testsa@python-tuf-kms.iam.gserviceaccount.com'
          create_credentials_file: true

      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0
        with:
          project_id: python-tuf-kms

      - name: sync
        run: |
          # upload
          gcloud storage cp --cache-control=no-store -r ./publish gs://jku-testbucket/
